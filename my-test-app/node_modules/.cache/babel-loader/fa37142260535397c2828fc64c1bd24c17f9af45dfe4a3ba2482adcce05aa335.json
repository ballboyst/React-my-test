{"ast":null,"code":"var _jsxFileName = \"/app/my-test-app/src/App.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import { ColoredMessage } from \"./components/coloredMessage\";\n// import { useState } from \"react\"\n\n// export const App = () => {\n//     console.log(\"レンダリング\");\n//     const [num, setNum] = useState(0);\n\n//     const onClickButton = () => {\n//         setNum( num + 1);\n//         setNum( num + 1);\n//     };\n\n//     return (\n//         <>\n//             <h1 style={{color: \"red\"}}>こんにちは</h1>\n//             <ColoredMessage color=\"blue\">お元気ですか？</ColoredMessage>\n//             <ColoredMessage color=\"pink\">元気です！</ColoredMessage>\n//             <button onClick={onClickButton}>ボタン</button>\n//             <p>{num}</p>\n//         </>\n//     );\n// };\n\nexport const ColoredMessage = props => {\n  // スタイルを定義\n  const {\n    color,\n    children\n  } = props;\n  const contentStyle = {\n    color: color,\n    fontSize: \"20px\"\n  };\n\n  // コンポーネントの表示をreturn文の中に移動する\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: contentStyle,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n_c = ColoredMessage;\nvar _c;\n$RefreshReg$(_c, \"ColoredMessage\");","map":{"version":3,"names":["ColoredMessage","props","color","children","contentStyle","fontSize","_jsxDEV","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/my-test-app/src/App.jsx"],"sourcesContent":["// import { ColoredMessage } from \"./components/coloredMessage\";\n// import { useState } from \"react\"\n\n// export const App = () => {\n//     console.log(\"レンダリング\");\n//     const [num, setNum] = useState(0);\n\n//     const onClickButton = () => {\n//         setNum( num + 1);\n//         setNum( num + 1);\n//     };\n\n//     return (\n//         <>\n//             <h1 style={{color: \"red\"}}>こんにちは</h1>\n//             <ColoredMessage color=\"blue\">お元気ですか？</ColoredMessage>\n//             <ColoredMessage color=\"pink\">元気です！</ColoredMessage>\n//             <button onClick={onClickButton}>ボタン</button>\n//             <p>{num}</p>\n//         </>\n//     );\n// };\n\nexport const ColoredMessage = (props) => {\n    // スタイルを定義\n    const { color, children } = props;\n\n    const contentStyle = {\n        color: color,\n        fontSize: \"20px\"\n    };\n\n    // コンポーネントの表示をreturn文の中に移動する\n    return <p style={contentStyle}>{children}</p>;\n};"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,cAAc,GAAIC,KAAK,IAAK;EACrC;EACA,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGF,KAAK;EAEjC,MAAMG,YAAY,GAAG;IACjBF,KAAK,EAAEA,KAAK;IACZG,QAAQ,EAAE;EACd,CAAC;;EAED;EACA,oBAAOC,OAAA;IAAGC,KAAK,EAAEH,YAAa;IAAAD,QAAA,EAAEA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AACjD,CAAC;AAACC,EAAA,GAXWZ,cAAc;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}